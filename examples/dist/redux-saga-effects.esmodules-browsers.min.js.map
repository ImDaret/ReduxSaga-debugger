{"version":3,"file":"redux-saga-effects.esmodules-browsers.min.js","sources":["../../core/src/internal/sagaHelpers/fsmIterator.js","../../core/src/internal/sagaHelpers/takeEvery.js","../../core/src/internal/sagaHelpers/takeLatest.js","../../core/src/internal/sagaHelpers/takeLeading.js","../../core/src/internal/sagaHelpers/throttle.js","../../core/src/internal/sagaHelpers/retry.js","../../core/src/internal/sagaHelpers/debounce.js","../../core/src/internal/io-helpers.js"],"sourcesContent":["import * as is from '@redux-saga/is'\nimport { makeIterator } from '../utils'\n\nconst done = value => ({ done: true, value })\nexport const qEnd = {}\n\nexport function safeName(patternOrChannel) {\n  if (is.channel(patternOrChannel)) {\n    return 'channel'\n  }\n\n  if (is.stringableFunc(patternOrChannel)) {\n    return String(patternOrChannel)\n  }\n\n  if (is.func(patternOrChannel)) {\n    return patternOrChannel.name\n  }\n\n  return String(patternOrChannel)\n}\n\nexport default function fsmIterator(fsm, startState, name) {\n  let stateUpdater,\n    errorState,\n    effect,\n    nextState = startState\n\n  function next(arg, error) {\n    if (nextState === qEnd) {\n      return done(arg)\n    }\n    if (error && !errorState) {\n      nextState = qEnd\n      throw error\n    } else {\n      stateUpdater && stateUpdater(arg)\n      const currentState = error ? fsm[errorState](error) : fsm[nextState]()\n      ;({ nextState, effect, stateUpdater, errorState } = currentState)\n      return nextState === qEnd ? done(arg) : effect\n    }\n  }\n\n  return makeIterator(next, error => next(null, error), name)\n}\n","import fsmIterator, { safeName } from './fsmIterator'\nimport { take, fork } from '../io'\n\nexport default function takeEvery(patternOrChannel, worker, ...args) {\n  const yTake = { done: false, value: take(patternOrChannel) }\n  const yFork = ac => ({ done: false, value: fork(worker, ...args, ac) })\n\n  let action,\n    setAction = ac => (action = ac)\n\n  return fsmIterator(\n    {\n      q1() {\n        return { nextState: 'q2', effect: yTake, stateUpdater: setAction }\n      },\n      q2() {\n        return { nextState: 'q1', effect: yFork(action) }\n      },\n    },\n    'q1',\n    `takeEvery(${safeName(patternOrChannel)}, ${worker.name})`,\n  )\n}\n","import fsmIterator, { safeName } from './fsmIterator'\nimport { cancel, take, fork } from '../io'\n\nexport default function takeLatest(patternOrChannel, worker, ...args) {\n  const yTake = { done: false, value: take(patternOrChannel) }\n  const yFork = ac => ({ done: false, value: fork(worker, ...args, ac) })\n  const yCancel = task => ({ done: false, value: cancel(task) })\n\n  let task, action\n  const setTask = t => (task = t)\n  const setAction = ac => (action = ac)\n\n  return fsmIterator(\n    {\n      q1() {\n        return { nextState: 'q2', effect: yTake, stateUpdater: setAction }\n      },\n      q2() {\n        return task\n          ? { nextState: 'q3', effect: yCancel(task) }\n          : { nextState: 'q1', effect: yFork(action), stateUpdater: setTask }\n      },\n      q3() {\n        return { nextState: 'q1', effect: yFork(action), stateUpdater: setTask }\n      },\n    },\n    'q1',\n    `takeLatest(${safeName(patternOrChannel)}, ${worker.name})`,\n  )\n}\n","import fsmIterator, { safeName } from './fsmIterator'\nimport { take, call } from '../io'\n\nexport default function takeLeading(patternOrChannel, worker, ...args) {\n  const yTake = { done: false, value: take(patternOrChannel) }\n  const yCall = ac => ({ done: false, value: call(worker, ...args, ac) })\n\n  let action\n  const setAction = ac => (action = ac)\n\n  return fsmIterator(\n    {\n      q1() {\n        return { nextState: 'q2', effect: yTake, stateUpdater: setAction }\n      },\n      q2() {\n        return { nextState: 'q1', effect: yCall(action) }\n      },\n    },\n    'q1',\n    `takeLeading(${safeName(patternOrChannel)}, ${worker.name})`,\n  )\n}\n","import fsmIterator, { safeName } from './fsmIterator'\nimport { take, fork, actionChannel, delay } from '../io'\nimport * as buffers from '../buffers'\n\nexport default function throttle(delayLength, pattern, worker, ...args) {\n  let action, channel\n\n  const yActionChannel = { done: false, value: actionChannel(pattern, buffers.sliding(1)) }\n  const yTake = () => ({ done: false, value: take(channel) })\n  const yFork = ac => ({ done: false, value: fork(worker, ...args, ac) })\n  const yDelay = { done: false, value: delay(delayLength) }\n\n  const setAction = ac => (action = ac)\n  const setChannel = ch => (channel = ch)\n\n  return fsmIterator(\n    {\n      q1() {\n        return { nextState: 'q2', effect: yActionChannel, stateUpdater: setChannel }\n      },\n      q2() {\n        return { nextState: 'q3', effect: yTake(), stateUpdater: setAction }\n      },\n      q3() {\n        return { nextState: 'q4', effect: yFork(action) }\n      },\n      q4() {\n        return { nextState: 'q2', effect: yDelay }\n      },\n    },\n    'q1',\n    `throttle(${safeName(pattern)}, ${worker.name})`,\n  )\n}\n","import fsmIterator, { qEnd } from './fsmIterator'\nimport { call, delay } from '../io'\n\nexport default function retry(maxTries, delayLength, fn, ...args) {\n  let counter = maxTries\n\n  const yCall = { done: false, value: call(fn, ...args) }\n  const yDelay = { done: false, value: delay(delayLength) }\n\n  return fsmIterator(\n    {\n      q1() {\n        return {nextState: 'q2', effect: yCall, errorState: 'q10'}\n      },\n      q2() {\n        return {nextState: qEnd}\n      },\n      q10 (error) {\n        counter -= 1\n        if (counter <= 0) {\n          throw error\n        }\n        return {nextState: 'q1', effect: yDelay}\n      },\n    },\n    'q1',\n    `retry(${fn.name})`,\n  )\n}\n","import fsmIterator, { safeName } from './fsmIterator'\nimport { delay, fork, race, take } from '../io'\n\nexport default function debounceHelper(delayLength, patternOrChannel, worker, ...args) {\n  let action, raceOutput\n\n  const yTake = { done: false, value: take(patternOrChannel) }\n  const yRace = {\n    done: false,\n    value: race({\n      action: take(patternOrChannel),\n      debounce: delay(delayLength),\n    }),\n  }\n  const yFork = ac => ({ done: false, value: fork(worker, ...args, ac) })\n  const yNoop = value => ({ done: false, value })\n\n  const setAction = ac => (action = ac)\n  const setRaceOutput = ro => (raceOutput = ro)\n\n  return fsmIterator(\n    {\n      q1() {\n        return { nextState: 'q2', effect: yTake, stateUpdater: setAction }\n      },\n      q2() {\n        return { nextState: 'q3', effect: yRace, stateUpdater: setRaceOutput }\n      },\n      q3() {\n        return raceOutput.debounce\n          ? { nextState: 'q1', effect: yFork(action) }\n          : { nextState: 'q2', effect: yNoop(raceOutput.action), stateUpdater: setAction }\n      },\n    },\n    'q1',\n    `debounce(${safeName(patternOrChannel)}, ${worker.name})`,\n  )\n}\n","import * as is from '@redux-saga/is'\nimport { call, fork } from './io'\nimport { check } from './utils'\nimport {\n  takeEveryHelper,\n  takeLatestHelper,\n  takeLeadingHelper,\n  throttleHelper,\n  retryHelper,\n  debounceHelper,\n} from './sagaHelpers'\n\nconst validateTakeEffect = (fn, patternOrChannel, worker) => {\n  check(patternOrChannel, is.notUndef, `${fn.name} requires a pattern or channel`)\n  check(worker, is.notUndef, `${fn.name} requires a saga parameter`)\n}\n\nexport function takeEvery(patternOrChannel, worker, ...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeEvery, patternOrChannel, worker)\n  }\n\n  return fork(takeEveryHelper, patternOrChannel, worker, ...args)\n}\n\nexport function takeLatest(patternOrChannel, worker, ...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLatest, patternOrChannel, worker)\n  }\n\n  return fork(takeLatestHelper, patternOrChannel, worker, ...args)\n}\n\nexport function takeLeading(patternOrChannel, worker, ...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    validateTakeEffect(takeLeading, patternOrChannel, worker)\n  }\n\n  return fork(takeLeadingHelper, patternOrChannel, worker, ...args)\n}\n\nexport function throttle(ms, pattern, worker, ...args) {\n  if (process.env.NODE_ENV !== 'production') {\n    check(pattern, is.notUndef, 'throttle requires a pattern')\n    check(worker, is.notUndef, 'throttle requires a saga parameter')\n  }\n\n  return fork(throttleHelper, ms, pattern, worker, ...args)\n}\n\nexport function retry(maxTries, delayLength, worker, ...args) {\n  return call(retryHelper, maxTries, delayLength, worker, ...args)\n}\n\nexport function debounce(delayLength, pattern, worker, ...args) {\n  return fork(debounceHelper, delayLength, pattern, worker, ...args)\n}\n"],"names":["done","value","qEnd","safeName","patternOrChannel","is","String","name","fsmIterator","fsm","startState","stateUpdater","errorState","effect","nextState","next","arg","error","currentState","makeIterator","takeEvery","worker","args","action","yTake","take","yFork","ac","fork","setAction","q1","q2","takeLatest","task","yCancel","cancel","setTask","t","q3","takeLeading","yCall","call","throttle","delayLength","pattern","channel","yActionChannel","actionChannel","buffers","yDelay","delay","setChannel","ch","q4","retry","maxTries","fn","counter","q10","debounceHelper","raceOutput","yRace","race","debounce","yNoop","setRaceOutput","ro","takeEveryHelper","takeLatestHelper","takeLeadingHelper","ms","throttleHelper","retryHelper"],"mappings":"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"}